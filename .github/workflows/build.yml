name: pipeline

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Tests
        run: |
              sudo go test -race -covermode atomic -coverprofile=covprofile_tmp ./...
              cat $GITHUB_WORKSPACE/covprofile_tmp | grep -v "mocks" | grep -v "_mock" > $GITHUB_WORKSPACE/covprofile

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest

      - name: install goveralls
        run: |
         go install github.com/mattn/goveralls@latest

      - name: submit coverage
        run: $(go env GOPATH)/bin/goveralls -service="github" -coverprofile=covprofile
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v4
              
      - name: Extract Version
        id: version_step
        run: |
          echo "##[set-output name=version;]VERSION=${GITHUB_REF#$"refs/tags/v"}"
          echo "##[set-output name=version_tag;]$GITHUB_REPOSITORY:${GITHUB_REF#$"refs/tags/v"}"
          echo "##[set-output name=latest_tag;]$GITHUB_REPOSITORY:latest"

      - name: Print Version
        run: |
          echo ${{steps.version_step.outputs.version_tag}}
          echo ${{steps.version_step.outputs.latest_tag}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: build and deploy branch image to ghcr.io
        if: ${{ github.event_name == 'push' }}
        run: |
          ref="$(echo ${{ github.ref }} | cut -d'/' -f3)"
          docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
          docker buildx build --push \
              --build-arg VERSION=${{ steps.version_step.outputs.version_tag }} \
              --platform linux/amd64,linux/arm64 \
              -t ghcr.io/${{ github.actor }}/maptiled:${ref} .

      - name: deploy tagged (latest) to ghcr.io
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
          docker buildx build --push \
              --build-arg VERSION=${{ steps.version_step.outputs.version_tag }} \
              --platform linux/amd64,linux/arm64 \
              -t ghcr.io/${{ github.actor }}/maptiled:latest \

